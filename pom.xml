<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Ecomm - Gateway</name>
  <description>This project implements the entrypoint for each backend for frontend service. It adds request rate limit per user and unified authorization/authentication.</description>
  <groupId>io.oigres.ecomm</groupId>
  <artifactId>gateway</artifactId>
  <version>0.1.0-SNAPSHOT</version>

  <inceptionYear>2024</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.version>3.8.8</maven.version>
    <maven.resources.includeEmptyDirs>true</maven.resources.includeEmptyDirs>
    <maven.resources.overwrite>true</maven.resources.overwrite>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.3.1</maven-failsafe-plugin.version>
    <native-maven-plugin.version>0.9.28</native-maven-plugin.version>
    <maven-deploy-plugin.version>3.1.2</maven-deploy-plugin.version>
    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <spring-boot-maven-plugin.version>3.3.2</spring-boot-maven-plugin.version>
    <fabric8-maven-plugin.version>0.45.0</fabric8-maven-plugin.version>

    <spring-boot.version>3.3.2</spring-boot.version>
    <spring-cloud.version>2023.0.3</spring-cloud.version>
    <spring-kafka.version>3.2.3</spring-kafka.version>
    <swagger-annotations.version>2.2.22</swagger-annotations.version>
    <springdoc.version>2.6.0</springdoc.version>
    <jsonwebtoken.version>0.12.6</jsonwebtoken.version>
    <redisson-spring-boot-starter.version>3.36.0</redisson-spring-boot-starter.version>
    <caffeine.version>3.1.8</caffeine.version>
    <lombok.version>1.18.34</lombok.version> <!-- warning, depends on spring boot version and it is used in maven-compiler-plugin. If the version is not put, intellij does not compile -->
    <mapstruct.version>1.6.2</mapstruct.version>

    <ecomm.users-service.version>0.1.0-SNAPSHOT</ecomm.users-service.version>
    <ecomm.limiter-service.version>0.1.0-SNAPSHOT</ecomm.limiter-service.version>

    <tests.redis.hostname>localhost</tests.redis.hostname>
    <tests.redis.port>6379</tests.redis.port>
    <tests.kafka.hostname>localhost</tests.kafka.hostname>
    <tests.kafka.port>9092</tests.kafka.port>
  </properties>

  <developers>
    <developer>
      <name>Sergio Exposito</name>
      <email>sjexpos@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/sjexpos/ecomm-gateway.git</connection>
    <developerConnection>scm:git:https://github.com/sjexpos/ecomm-gateway.git</developerConnection>
    <url>scm:git:https://github.com/sjexpos/ecomm-gateway.git</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-gateway/issues</url>
  </issueManagement>

  <ciManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-gateway/actions</url>
  </ciManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka-bom</artifactId>
        <version>${spring-kafka.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations-jakarta</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-models-jakarta</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>

      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>

      <dependency>
        <groupId>org.redisson</groupId>
        <artifactId>redisson-spring-boot-starter</artifactId>
        <version>${redisson-spring-boot-starter.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>

      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-api</artifactId>
        <version>${ecomm.users-service.version}</version>
      </dependency>

      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>limiter-service-model</artifactId>
        <version>${ecomm.limiter-service.version}</version>
      </dependency>

      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>cache-lib</artifactId>
        <version>${ecomm.limiter-service.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>

    <!-- Open API 3 Model -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations-jakarta</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-models-jakarta</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
    </dependency>

    <dependency>
      <groupId>org.redisson</groupId>
      <artifactId>redisson-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <!-- Distributed tracing -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
    </dependency>

    <!-- Prometheus -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- JWT -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Users service model -->
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>limiter-service-model</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>cache-lib</artifactId>
    </dependency>

    <!-- Kafka -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <!-- Cloud Native Spring Admin connector -->
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- WireMock -->
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>${build-helper-maven-plugin.version}</version>
      <type>maven-plugin</type>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes><include>**/*</include></includes>
        <excludes>
          <exclude>**/.git</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.yaml</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes><include>**/*</include></includes>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${maven.version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${maven.compiler.source}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <parameters>true</parameters> <!-- store method argument names on byte code. Useful for spring SPEL -->
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*ITest</exclude>
            <exclude>**/*ITests</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          <argLine> <!-- it allows to override env vars using JUnit pioneer extension on Java 17 and later  -->
              --add-opens java.base/java.util=ALL-UNNAMED
              --add-opens java.base/java.lang=ALL-UNNAMED
          </argLine>          
          <summaryFile>${project.build.directory}/site/failsafe-summary.xml</summaryFile>
          <includes>
            <include>**/*ITest</include>
            <include>**/*ITests</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>${native-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <output>file</output>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>${git-commit-id-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>false</verbose>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <offline>true</offline>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>validate</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local-windows</id>
      <activation>
        <os><family>windows</family></os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>local-unix</id>
      <activation>
        <os><family>unix</family></os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${fabric8-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-it-redis</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <images>
                    <image>
                      <name>redis:6.2.2</name>
                      <alias>it-redis</alias>
                      <run>
                        <ports>
                          <port>6379:${tests.redis.port}</port>
                        </ports>
                        <wait>
                          <tcp>
                            <ports>
                              <port>${tests.redis.port}</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[REDIS-6.2.2]</prefix>
                          <date>NONE</date>
                          <color>yellow</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-zookeeper</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                  <containerNamePattern>%a</containerNamePattern>
                  <images>
                    <image>
                      <name>confluentinc/cp-zookeeper:7.7.0</name>
                      <alias>it-zookeeper</alias>
                      <run>
                        <hostname>it-zookeeper</hostname>
                        <env>
                          <ZOOKEEPER_CLIENT_PORT>2181</ZOOKEEPER_CLIENT_PORT>
                          <ZOOKEEPER_TICK_TIME>2000</ZOOKEEPER_TICK_TIME>
                        </env>
                        <ports>
                          <port>22181:2181</port>
                        </ports>
                        <network>
                          <name>it-network</name>
                          <alias>it-zookeeper</alias>
                        </network>
                        <wait>
                          <tcp>
                            <ports>
                              <port>2181</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[ZOOKEEPER-7.7.0]</prefix>
                          <date>NONE</date>
                          <color>red</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-kafka</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                  <containerNamePattern>%a</containerNamePattern>
                  <images>
                    <image>
                      <name>confluentinc/cp-kafka:7.7.0</name>
                      <alias>container</alias>
                      <run>
                        <env>
                          <KAFKA_BROKER_ID>1</KAFKA_BROKER_ID>
                          <KAFKA_ZOOKEEPER_CONNECT>it-zookeeper:2181</KAFKA_ZOOKEEPER_CONNECT>
                          <KAFKA_ADVERTISED_LISTENERS>PLAINTEXT://localhost:${tests.kafka.port},PLAINTEXT_HOST://localhost:9093</KAFKA_ADVERTISED_LISTENERS>
                          <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>
                          <KAFKA_INTER_BROKER_LISTENER_NAME>PLAINTEXT</KAFKA_INTER_BROKER_LISTENER_NAME>
                          <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
                        </env>
                        <ports>
                          <port>9092:${tests.kafka.port}</port>
                          <port>9093:9093</port>
                        </ports>
                        <network>
                          <name>it-network</name>
                          <alias>it-kafka</alias>
                        </network>
                        <dependsOn>
                          <container>it-zookeeper</container>
                        </dependsOn>
                        <wait>
                          <tcp>
                            <ports>
                              <port>${tests.kafka.port}</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[KAFKA-7.7.0]</prefix>
                          <date>NONE</date>
                          <color>blue</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>remove-it-database</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>


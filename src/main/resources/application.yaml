server:
  servlet:
    context-path:
  port: 8080

spring:
  boot:
    admin:
      client:
        # Cloud Native Spring Admin Server is running
        url: http://localhost:9090
  application:
    name: gateway-${ecomm.service.gateway.forward-api-name}
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origin-patterns: '*'
            allowed-methods: GET, POST, PUT, DELETE, PATCH
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gateway-${ecomm.service.gateway.forward-api-name}
      max-poll-records: 100
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
      observation-enabled: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      observation-enabled: true
    listener:
      observation-enabled: true
  cache:
    type: redis
    redis:
      cache-null-values: true
      use-key-prefix: true
      key-prefix: ECOMM-GATEWAY
      time-to-live: 5000
  data:
    redis:
      host: localhost
      port: 6379
      ssl:
        enabled: false
      connectTimeout: 5000
      timeout: 1000

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - url: /api
        name: 

management:
  server:
    port: ${server.port}
  endpoints:
    web:
      exposure:
        include: info, health, httptrace, loggers, metrics, threaddump
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      show-components: always
  tracing:
    enabled: true
    sampling:
      probability: 1.0

ecomm:
  service:
    tracing:
      url: http://localhost:4318/v1/traces
    authentication:
      scope: ${ecomm.service.gateway.forward-api-name}
      enabled: true
      jwt:
        secret: Yn2kjibddFAWtnPJ2AFlL8WXmohJMCvigQggaEypa5E=
    gateway:
      forward-api-name: admin
      forward: http://localhost:5051
      auth-server-uri: http://localhost:6061
    limiter:
      topics:
        incoming-request: incoming-request-topic
        blacklisted-users: blacklisted-users-topic
